{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","prediction","setPrediction","age","setage","Medu","setMedu","studytime","setstudytime","failures","setfailures","famrel","setfamrel","freetime","setfreetime","goout","setgoout","Walc","setWalc","health","sethealth","absences","setabsences","payload","className","onSubmit","event","preventDefault","axios","post","then","response","data","type","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA+HeA,MA3Hf,WAAgB,IAAD,EACuBC,mBAAS,GADhC,mBACNC,EADM,KACMC,EADN,OAESF,mBAAS,GAFlB,mBAENG,EAFM,KAEDC,EAFC,OAGWJ,mBAAS,GAHpB,mBAGNK,EAHM,KAGAC,EAHA,OAIqBN,mBAAS,GAJ9B,mBAINO,EAJM,KAIKC,EAJL,OAKmBR,mBAAS,GAL5B,mBAKNS,EALM,KAKIC,EALJ,OAMeV,mBAAS,GANxB,mBAMNW,EANM,KAMEC,EANF,OAOmBZ,mBAAS,GAP5B,mBAONa,EAPM,KAOIC,EAPJ,OAQad,mBAAS,GARtB,mBAQNe,EARM,KAQCC,EARD,OASWhB,mBAAS,GATpB,mBASNiB,EATM,KASAC,EATA,OAUelB,mBAAS,GAVxB,mBAUNmB,EAVM,KAUEC,EAVF,OAWmBpB,mBAAS,GAX5B,mBAWNqB,EAXM,KAWIC,EAXJ,KAYPC,EAAU,CACd,IAAOpB,EACP,KAAQE,EACR,UAAaE,EACb,SAAYE,EACZ,OAAUE,EACV,SAAYE,EACZ,MAASE,EACT,KAAQE,EACR,OAAUE,EACV,SAAYE,GA6Cd,OACE,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,0CACA,uBAAMC,SA5CZ,SAAyBC,GACvBA,EAAMC,iBACNC,IAAMC,KAAK,4EAA6EN,GACvFO,MAAK,SAACC,GACL7B,EAAc6B,EAASC,UAwCYR,UAAU,OAA3C,UACE,oCACA,uBACES,KAAK,SAASC,SAvCxB,SAAmBC,GACjB/B,EAAO+B,EAAEC,OAAOC,UAwCV,iMACA,uBACEJ,KAAK,SAASC,SAxCxB,SAAoBC,GAClB7B,EAAQ6B,EAAEC,OAAOC,UAyCX,0EACA,uBACEJ,KAAK,SAASC,SAzCxB,SAAyBC,GACvB3B,EAAa2B,EAAEC,OAAOC,UA0ChB,8DACA,uBACEJ,KAAK,SAASC,SA1CxB,SAAwBC,GACtBzB,EAAYyB,EAAEC,OAAOC,UA2Cf,8GACA,uBACEJ,KAAK,SAASC,SA3CxB,SAAsBC,GACpBvB,EAAUuB,EAAEC,OAAOC,UA4Cb,qGACA,uBACEJ,KAAK,SAASC,SA5CxB,SAAwBC,GACtBrB,EAAYqB,EAAEC,OAAOC,UA6Cf,qGACA,uBACEJ,KAAK,SAASC,SA7CxB,SAAqBC,GACnBnB,EAASmB,EAAEC,OAAOC,UA8CZ,0GACA,uBACEJ,KAAK,SAASC,SA9CxB,SAAoBC,GAClBjB,EAAQiB,EAAEC,OAAOC,UA+CX,oGACA,uBACEJ,KAAK,SAASC,SA/CxB,SAAsBC,GACpBf,EAAUe,EAAEC,OAAOC,UAgDb,kFACA,uBACEJ,KAAK,SAASC,SAhDxB,SAAwBC,GACtBb,EAAYa,EAAEC,OAAOC,UAiDf,mDACA,uBACEJ,KAAK,SAAST,UAAU,WAG5B,mDAAsBvB,WC7GfqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.97e48611.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport { useState } from \"react\";\n\nfunction App() {\n  const [prediction, setPrediction] = useState(0);\n  const [age, setage] = useState(0);\n  const [Medu, setMedu] = useState(0);\n  const [studytime, setstudytime] = useState(0);\n  const [failures, setfailures] = useState(0);\n  const [famrel, setfamrel] = useState(0);\n  const [freetime, setfreetime] = useState(0);\n  const [goout, setgoout] = useState(0);\n  const [Walc, setWalc] = useState(0);\n  const [health, sethealth] = useState(0);\n  const [absences, setabsences] = useState(0);\n  const payload = {\n    \"age\": age,\n    \"Medu\": Medu,\n    \"studytime\": studytime,\n    \"failures\": failures,\n    \"famrel\": famrel,\n    \"freetime\": freetime,\n    \"goout\": goout,\n    \"Walc\": Walc,\n    \"health\": health,\n    \"absences\": absences\n  };\n\n  \n\n  function mySubmitHandler(event) {\n    event.preventDefault();\n    axios.post('https://cors-anywhere.herokuapp.com/https://f91p9y.deta.dev/grade_predict', payload)\n    .then((response) => {\n      setPrediction(response.data)\n    });\n  }\n\n  function ageChange(e) {\n    setage(e.target.value)\n  }\n  function MeduChange(e) {\n    setMedu(e.target.value)\n  }\n  function studytimeChange(e) {\n    setstudytime(e.target.value)\n  }\n  function failuresChange(e) {\n    setfailures(e.target.value)\n  }\n  function famrelChange(e) {\n    setfamrel(e.target.value)\n  }\n  function freetimeChange(e) {\n    setfreetime(e.target.value)\n  }\n  function gooutChange(e) {\n    setgoout(e.target.value)\n  }\n  function WalcChange(e) {\n    setWalc(e.target.value)\n  }\n  function healthChange(e) {\n    sethealth(e.target.value)\n  }\n  function absencesChange(e) {\n    setabsences(e.target.value)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Grade ML</h1>\n        <form onSubmit={mySubmitHandler} className=\"Form\">\n          <p>age</p>\n          <input\n            type=\"number\" onChange={ageChange}\n          />\n          <p>mother's education (numeric: 0 - none, 1 - primary education (4th grade), 2 – 5th to 9th grade, 3 – secondary education or 4 – higher education):</p>\n          <input\n            type=\"number\" onChange={MeduChange}\n          />\n          <p>weekly study time (numeric: 1 - 10 hours)</p>\n          <input\n            type=\"number\" onChange={studytimeChange}\n          />\n          <p>number of past class failures</p>\n          <input\n            type=\"number\" onChange={failuresChange}\n          />\n          <p>quality of family relationships (numeric: from 1 - very bad to 5 - excellent)</p>\n          <input\n            type=\"number\" onChange={famrelChange}\n          />\n          <p>free time after school (numeric: from 1 - very low to 5 - very high)</p>\n          <input\n            type=\"number\" onChange={freetimeChange}\n          />\n          <p>going out with friends (numeric: from 1 - very low to 5 - very high)</p>\n          <input\n            type=\"number\" onChange={gooutChange}\n          />\n          <p>weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)</p>\n          <input\n            type=\"number\" onChange={WalcChange}\n          />\n          <p>current health status (numeric: from 1 - very bad to 5 - very good)</p>\n          <input\n            type=\"number\" onChange={healthChange}\n          />\n          <p>number of school absences (numeric: from 0 to 93)</p>\n          <input\n            type=\"number\" onChange={absencesChange}\n          />\n          <h3>Predict my grade!</h3>\n          <input\n            type='submit' className=\"btn\"\n          />\n        </form>\n        <h2>Predicted grade: {prediction}</h2>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}